{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Potentials\n",
    "\n",
    "In this Notebook you can find the different Potentials, that are already implemented and can be used for your projects. Play around with the parameters to get familiar with the Potentials\n",
    "\n",
    "\n",
    "Here you also can find classical Potentials like the harmonic Oscillator or the Lennard Jones Potential."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os, sys\n",
    "path = \"../\"\n",
    "sys.path.append(path)\n",
    "\n",
    "\n",
    "import numpy as np\n",
    "from matplotlib import pyplot as plt\n",
    "\n",
    "#Ensembler\n",
    "from ensembler.potentials import OneD as potentials1D\n",
    "from ensembler.potentials import TwoD as potentials2D\n",
    "\n",
    "#Plotting:\n",
    "import ensembler.visualisation.plotPotentials as vis\n",
    "\n",
    "#params\n",
    "test_timing_with_points =100"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from ensembler.potentials import OneD as potentials1D\n",
    "import ensembler.visualisation.plotPotentials as vis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Classics\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Harmonic Oscillator\n",
    "\n",
    "The Harmonic Oscillator is one of the most used modelling potentials1D. Its based on hooke's law and can be used to describe obviously springs, but also covalent bonds of two atoms and many more physical relations.\n",
    "\n",
    "\n",
    "Functional:\n",
    "\n",
    "$V =  \\frac{1}{2}*k*(r - r_0)^2+V_{offset} $\n",
    "\n",
    "with:\n",
    "* $k$ force constant\n",
    "* $r_0$ optimal position (optimal covalent bond length)\n",
    "* $r$ current position (current bond length)\n",
    "* $V_{offset}$ minimal potential energy offset\n",
    "\n",
    "first partial deviation by r\n",
    "\n",
    "$\\frac{\\partial V}{\\partial r} = k*(r - r_0) $\n",
    "\n",
    "\n",
    "\n",
    "#### 1D"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 0 ns\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 2 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 1D\n",
    "positions = np.linspace(-10,10, test_timing_with_points)\n",
    "\n",
    "V = potentials1D.harmonicOscillatorPotential()\n",
    "#print(V)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, axes = vis.plot_1DPotential(V, positions=positions)\n",
    "\n",
    "fig.savefig(\"harmonic_Oscillator.png\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### 2D"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 1.05 ms\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<matplotlib.image.AxesImage at 0x27df5b2e788>"
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 2D\n",
    "positions = np.linspace(-4, 4, test_timing_with_points)\n",
    "x_positions, y_positions = np.meshgrid(positions,positions)\n",
    "positions2D = np.array([x_positions.flatten(), y_positions.flatten()]).T\n",
    "\n",
    "V = potentials2D.harmonicOscillatorPotential()\n",
    "#print(V)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions2D)\n",
    "\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "plt.imshow(V.ene(positions2D).reshape([test_timing_with_points,test_timing_with_points]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Double Well Potential\n",
    "The double well is a very nice potential.\n",
    "\n",
    "Functional:\n",
    "\n",
    "$V = \\frac{V_{max}}{b^4}*((-\\frac{a}{2} + r)^2-b^2)^2$\n",
    "\n",
    "\n",
    "first order derivative\n",
    "\n",
    "$\\frac{\\partial V}{\\partial r} = \\frac{V_max}{b^4}*(-2a + 4r)*((-a/2 + r)^2-b^2) $"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 349 µs\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 2 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "positions = np.linspace(-3, 3, test_timing_with_points)\n",
    "\n",
    "V = potentials1D.doubleWellPotential(a=0, b=1, Vmax=5)\n",
    "#print(V)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, axes = vis.plot_1DPotential(V, positions=positions, y_range=[-50,50])\n",
    "fig.axes[0].set_ylim([0,10])\n",
    "fig.savefig(\"double_well.png\")\n",
    "\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Four Well Potential"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 998 µs\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 2 Axes>",
      "image/png": "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\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#phase space\n",
    "positions = np.linspace(0, 10, test_timing_with_points)\n",
    "\n",
    "#build potential\n",
    "V = potentials1D.fourWellPotential(a=1,b=4, c=6, d=8)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\") #visualize\n",
    "fig, axes = vis.plot_1DPotential(V, positions=positions)\n",
    "#fig.savefig(\"four_well.png\")\n",
    "\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Wave Potential\n",
    "\n",
    "Functional: \n",
    "\n",
    "$A*cos(m*(r + w)) + V_{off}$\n",
    "\n",
    "first derivative:\n",
    "\n",
    "$\\frac{\\partial V}{\\partial r} = -A*m*sin(m*(r + w)) $"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 998 µs\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 2 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#1D\n",
    "positions = np.linspace(0, 4, test_timing_with_points)\n",
    "\n",
    "V = potentials1D.wavePotential()\n",
    "#print(V)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, axes = vis.plot_1DPotential(V, positions=positions)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 1.99 ms\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<matplotlib.image.AxesImage at 0x27df6636a88>"
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 1 Axes>",
      "image/png": "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\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#2D\n",
    "positions = np.linspace(-180, 180, test_timing_with_points)\n",
    "x_positions, y_positions = np.meshgrid(positions,positions)\n",
    "positions2D = np.array([x_positions.flatten(), y_positions.flatten()]).T\n",
    "\n",
    "V = potentials2D.wavePotential(multiplicity=[2,2], radians=False)\n",
    "#print(V)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions2D)\n",
    "\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "plt.imshow(V.ene(positions2D).reshape([test_timing_with_points,test_timing_with_points]))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "### Torsion Potential"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 0 ns\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 2 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "positions = np.linspace(-4, 4, test_timing_with_points)\n",
    "\n",
    "w1 = potentials1D.wavePotential(multiplicity=3)\n",
    "w2 = potentials1D.wavePotential()\n",
    "waves = [w1, w2]\n",
    "\n",
    "V = potentials1D.torsionPotential(wavePotentials=waves)\n",
    "#print(V)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, axes = vis.plot_1DPotential(V, positions=positions)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "### Lennard Jones Potential\n",
    "\n",
    "Functional: \n",
    "\n",
    "$V = 4e*(\\frac{s^{12}}{(r - r_0)^12} - \\frac{s^6}{(r - r_0)^6}) +  V_{off}$\n",
    "\n",
    "first derivative:\n",
    "\n",
    "$\\frac{\\partial V}{\\partial r} = 4e*(-12*\\frac{s^{12}}{(r - r_0)^13} + 6*\\frac{s^6}{(r - r_0)^7})$\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 0 ns\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 2 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "positions = np.linspace(-5, 5, test_timing_with_points)\n",
    "\n",
    "V = potentials1D.lennardJonesPotential()\n",
    "#print(V)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, _ = vis.plot_1DPotential(V, positions=positions, y_range=[-5,5])\n",
    "pass"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Culomb Potential\n",
    "\n",
    "\n",
    "Functional: \n",
    "\n",
    "$V = \\frac{q_1q_2}{(4 \\pi \\epsilon r)}$\n",
    "\n",
    "first derivative:\n",
    "\n",
    "$\\frac{\\partial V}{\\partial r} = \\frac{-q_1q_2}{(4\\pi \\epsilon r^2)}$\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 0 ns\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 2 Axes>",
      "image/png": "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\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "positions = np.linspace(-1, 5, test_timing_with_points)\n",
    "\n",
    "V = potentials1D.coulombPotential()\n",
    "#print(V)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, axes = vis.plot_1DPotential(V, positions=positions)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "## Perturbed/MultiState Potentials"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### linear coupled\n",
    "\n",
    "Functional:\n",
    "\n",
    "$V(r, \\lambda) = \\lambda V_a(r) + (1-\\lambda) V_b(r)$\n",
    "\n",
    "\n",
    "first order derivatives:\n",
    "\n",
    "\n",
    "$\\frac{\\partial V}{\\partial \\lambda} = $\n",
    "\n",
    "$\\frac{\\partial V}{\\partial r} = $\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 0 ns\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 2 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "positions = np.linspace(-4, 4, test_timing_with_points)\n",
    "\n",
    "w1 = potentials1D.harmonicOscillatorPotential()\n",
    "w2 = potentials1D.harmonicOscillatorPotential(k=11)\n",
    "\n",
    "V = potentials1D.linearCoupledPotentials(Va=w1, Vb=w2)\n",
    "#print(V)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, axes = vis.plot_1DPotential(V, positions=positions)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 720x720 with 2 Axes>",
      "image/png": "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\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "positions = np.linspace(-4, 4, test_timing_with_points)\n",
    "\n",
    "w1 = potentials1D.harmonicOscillatorPotential(k=10, x_shift=-2)\n",
    "w2 = potentials1D.harmonicOscillatorPotential(k=10, x_shift=2)\n",
    "\n",
    "\n",
    "w1 = potentials1D.harmonicOscillatorPotential(k=12, x_shift=-2)\n",
    "w2 = potentials1D.harmonicOscillatorPotential(k=12, x_shift=2)\n",
    "V = potentials1D.linearCoupledPotentials(Va=w1, Vb=w2)\n",
    "\n",
    "lambda_ene = []\n",
    "for lam in np.arange(0, 1, 0.01):\n",
    "    V.lam = lam\n",
    "    lambda_ene.append(V.ene(positions))\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, ax = plt.subplots(ncols=1, figsize=[10,10])\n",
    "mapping = ax.imshow(lambda_ene, extent=[0,100, 0,100], vmin=0, vmax=50)\n",
    "opt_labels = np.array(ax.get_yticks())/100\n",
    "ax.set_yticklabels(opt_labels)\n",
    "opt_labels = np.round(((np.array(ax.get_yticks())/100)*8)-4,2)\n",
    "ax.set_xticklabels(opt_labels)\n",
    "\n",
    "ax.set_ylabel(\"lambda\")\n",
    "ax.set_xlabel(\"r\")\n",
    "cm = plt.colorbar(mapping)\n",
    "cm.set_label(\"V\")\n",
    "fig.tight_layout()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "### exponential Copuled - Enveloping Potential\n",
    "\n",
    "\n",
    "Used in EDS\n",
    "\n",
    "Functional:\n",
    "\n",
    "$V(r) = -\\frac{1}{k_b T s} ln(e^{- k_b T s (V_i-E^{off}_i)}+e^{-k_b T s (V_j-E^{off}_j)})$ \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 1000000 positions: \n",
      "Wall time: 67.3 ms\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 2 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "text/plain": "(0, 2)"
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 1 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "positions = np.linspace(-4, 4, test_timing_with_points*10000)\n",
    "\n",
    "w1 = potentials1D.harmonicOscillatorPotential(x_shift=-2)\n",
    "w2 = potentials1D.harmonicOscillatorPotential(x_shift=2)\n",
    "\n",
    "#print(w1, w2)\n",
    "V = potentials1D.exponentialCoupledPotentials(Va=w1, Vb=w2, s=1, eoffA=0, eoffB=0)\n",
    "#print(V)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, axes = vis.plot_1DPotential(V, positions=positions)\n",
    "plt.show()\n",
    "plt.close()\n",
    "plt.plot(positions, V.ene(positions))\n",
    "plt.plot(positions, w1.ene(positions))\n",
    "plt.plot(positions, w2.ene(positions))\n",
    "\n",
    "\n",
    "plt.ylim([0,2])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "### linear & exponential hybrid Copuled - $\\lambda$ EDS\n",
    "\n",
    "Functional:\n",
    "\n",
    "$V(r) = -\\frac{1}{k_b T s} ln(\\lambda e^{- k_b T s (V_i-E^{off}_i)}+(1-\\lambda)e^{-k_b T s (V_j-E^{off}_j)})$ \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 0 ns\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 2 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "positions = np.linspace(-4, 4, test_timing_with_points)\n",
    "\n",
    "w1 = potentials1D.harmonicOscillatorPotential(x_shift=-2)\n",
    "w2 = potentials1D.harmonicOscillatorPotential(x_shift=2)\n",
    "\n",
    "V = potentials1D.hybridCoupledPotentials(Va=w1, Vb=w2, lam=0)\n",
    "#print(V)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, axes = vis.plot_1DPotential(V, positions=positions)\n",
    "\n",
    "#perturbed potentilas\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 720x720 with 2 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "positions = np.linspace(-4, 4, test_timing_with_points)\n",
    "\n",
    "w1 = potentials1D.harmonicOscillatorPotential(k=12, x_shift=-2)\n",
    "w2 = potentials1D.harmonicOscillatorPotential(k=12, x_shift=2)\n",
    "V = potentials1D.hybridCoupledPotentials(Va=w1, Vb=w2, s=0.1)\n",
    "\n",
    "#ha=harmonicOsc(fc=1.0, x_shift=0.0), hb=harmonicOsc(fc=3.0, x_shift=10.0), s=0.05, temp=300.0\n",
    "\n",
    "lambda_ene = []\n",
    "for lam in np.arange(0, 1.01, 0.01):\n",
    "    V.lam = lam\n",
    "    lambda_ene.append(V.ene(positions))\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, ax = plt.subplots(ncols=1, figsize=[10,10])\n",
    "mapping = ax.imshow(lambda_ene, extent=[0,100, 0,100], vmin=0, vmax=10)\n",
    "opt_labels = np.array(ax.get_yticks())/100\n",
    "ax.set_yticklabels(opt_labels)\n",
    "opt_labels = np.round(((np.array(ax.get_yticks())/100)*8)-4,2)\n",
    "ax.set_xticklabels(opt_labels)\n",
    "\n",
    "ax.set_ylabel(\"lambda\")\n",
    "ax.set_xlabel(\"r\")\n",
    "cm = plt.colorbar(mapping)\n",
    "cm.set_label(\"V\")\n",
    "fig.tight_layout()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 720x720 with 2 Axes>",
      "image/png": "\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "positions = np.linspace(-4, 4, test_timing_with_points)\n",
    "\n",
    "w1 = potentials1D.harmonicOscillatorPotential(k=12, x_shift=-2)\n",
    "w2 = potentials1D.harmonicOscillatorPotential(k=12, x_shift=2)\n",
    "V = potentials1D.hybridCoupledPotentials(Va=w1, Vb=w2, s=0.1)\n",
    "\n",
    "\n",
    "points=50\n",
    "lambda_ene = []\n",
    "for lam, s in zip(np.linspace(0, 0.5, points), np.logspace(0, -3,  points)):\n",
    "    V.lam = lam\n",
    "    V.s=s\n",
    "    lambda_ene.append(V.ene(positions))\n",
    "for lam, s in zip(np.linspace(0.51, 1,  points), np.logspace(-3, 0,  points)):\n",
    "    V.lam = lam\n",
    "    V.s=s\n",
    "    lambda_ene.append(V.ene(positions))\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, ax = plt.subplots(ncols=1, figsize=[10,10])\n",
    "mapping = ax.imshow(lambda_ene, extent=[0,100, 0,100], vmin=0, vmax=30)\n",
    "opt_labels = np.array(ax.get_yticks())/100\n",
    "ax.set_yticklabels(opt_labels)\n",
    "opt_labels = np.round(((np.array(ax.get_yticks())/100)*8)-4,2)\n",
    "ax.set_xticklabels(opt_labels)\n",
    "\n",
    "ax.set_ylabel(\"lambda\")\n",
    "ax.set_xlabel(\"r\")\n",
    "cm = plt.colorbar(mapping)\n",
    "cm.set_label(\"V\")\n",
    "fig.tight_layout()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    },
    "tags": []
   },
   "source": [
    "## Special Potentials\n",
    "\n",
    "The Gerhard Koenich speciality corner. Here we have some special potential for very special usecases."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    },
    "tags": []
   },
   "source": [
    "### dummy Potential\n",
    "\n",
    "This potential returns always the same value independt on its position.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 0 ns\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "..\\ensembler\\visualisation\\plotPotentials.py:56: UserWarning: Attempting to set identical bottom == top == 0 results in singular transformations; automatically expanding.\n",
      "  ax.set_ylim(min(y_range), max(y_range)) if (y_range != None) else ax.set_ylim(min(energies), max(energies))\n",
      "..\\ensembler\\visualisation\\plotPotentials.py:83: UserWarning: Attempting to set identical bottom == top == 0.0 results in singular transformations; automatically expanding.\n",
      "  ax.set_ylim(min(y_range), max(y_range)) if (y_range != None) else ax.set_ylim(min(energies), max(energies))\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 2 Axes>",
      "image/png": "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\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "positions = np.linspace(1,100, test_timing_with_points)\n",
    "\n",
    "V = potentials1D.dummyPotential()\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, axes = vis.plot_1DPotential(V, positions=positions)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Flatwell Potential\n",
    "\n",
    "A potential return dependent on a position a value in a binary fashion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "pycharm": {
     "name": "#%% md\n"
    }
   },
   "source": [
    "positions = sorted(list(np.linspace(-10,10, test_timing_with_points))+[1, 0])\n",
    "\n",
    "V = potentials1D.flatwellPotential()\n",
    "#print(V)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, axes = vis.plot_1DPotential_Term(V, positions=positions, y_range=[-3, 10])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "pycharm": {
     "name": "#%%\n"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "calculate 100 positions: \n",
      "Wall time: 0 ns\n",
      "\n",
      "Visualization\n"
     ]
    },
    {
     "data": {
      "text/plain": "<Figure size 243.78x150.664 with 2 Axes>",
      "image/png": "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\n"
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "positions = np.linspace(-10,10, test_timing_with_points)\n",
    "\n",
    "V = potentials1D.flatwellPotential(y_min=0)\n",
    "\n",
    "print(\"calculate \"+str(len(positions))+\" positions: \")\n",
    "%time V.ene(positions)\n",
    "\n",
    "print(\"\\nVisualization\")\n",
    "fig, _ = vis.plot_1DPotential(V, positions=positions, y_range=[-5,5])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "file_extension": ".py",
  "kernelspec": {
   "display_name": "Python 3.7.7 64-bit ('EnsemblerDev': conda)",
   "language": "python",
   "name": "python37764bitensemblerdevcondaa4593ef55eeb4c19ab962e621795cac3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.7"
  },
  "mimetype": "text/x-python",
  "name": "python",
  "npconvert_exporter": "python",
  "pygments_lexer": "ipython3",
  "version": 3
 },
 "nbformat": 4,
 "nbformat_minor": 2
}